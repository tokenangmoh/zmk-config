/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E            &kp R                 &kp T              &kp Y         &kp U               &kp I             &kp O    &kp P     &kp LC(BACKSPACE)
&kp ESCAPE  &kp A  &kp S  &kp D            &kp F                 &kp G              &kp H         &kp J               &kp K             &kp L    &kp SEMI  &kp SQT
&kp CAPS    &kt Z  &kp X  &kp C            &kp V                 &kp B              &kp N         &kp M               &kp COMMA         &kp DOT  &kp FSLH  &caps_word
                          &mt LCTRL MINUS  &mt LEFT_SHIFT SPACE  &lt 1 BACKSPACE    &lt 2 DELETE  &mt LEFT_ALT ENTER  &mt LEFT_GUI SQT
            >;
        };

        NUMSYM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1        &kp N2      &kp N3         &kp N4        &kp N5           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &trans
&trans  &kp GRAVE     &kp EQUAL   &kp LBKT       &kp RBKT      &kp BSLH         &kp LS(TILDE)  &kp LS(PLUS)  &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(PIPE)  &trans
                                  &trans         &trans        &trans           &kp DELETE     &trans        &trans
            >;
        };

        ARRFUN {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &kp TAB       &kp HOME      &kp UP        &kp END       &kp PAGE_UP      &kp PRINTSCREEN  &kp F1  &kp F2   &kp F3   &kp F4   &kp K_POWER
&trans      &kp ESCAPE    &kp LEFT      &kp DOWN      &kp RIGHT     &kp PAGE_DOWN    &kp INSERT       &kp F5  &kp F6   &kp F7   &kp F8   &kp C_SLEEP
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &bt BT_CLR_ALL   &kp F9  &kp F10  &kp F11  &kp F12  &trans
                                        &trans        &trans        &kp BACKSPACE    &trans           &trans  &trans
            >;
        };
    };
};
