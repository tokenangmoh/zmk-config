/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <125>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
            require-prior-idle-ms = <125>;
        };

        spc: spc {
            compatible = "zmk,behavior-hold-tap";
            label = "SPC";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            require-prior-idle-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q            &kp W            &kp E                &kp R                  &kp T              &kp Y         &kp U               &kp I                &kp O            &kp P                    &kp LC(BACKSPACE)
&kp ESCAPE  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F      &kp G              &kp H         &hmr LEFT_SHIFT J   &hmr LEFT_CONTROL K  &hmr LEFT_ALT L  &hmr LEFT_GUI SEMICOLON  &kp SQT
&kp CAPS    &kp Z            &kp X            &kp C                &kp V                  &kp B              &kp N         &kp M               &kp COMMA            &kp DOT          &kp FSLH                 &caps_word
                                              &mt LCTRL MINUS      &spc LEFT_SHIFT SPACE  &lt 1 BACKSPACE    &lt 2 DELETE  &mt LEFT_ALT ENTER  &mt LEFT_GUI SQT
            >;
        };

        NUMSYM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1     &kp N2     &kp N3    &kp N4      &kp N5         &kp N6      &kp N7    &kp N8          &kp N9                &kp N0                 &trans
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET   &kp AMPS  &kp ASTRK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&tog 3  &kp GRAVE  &kp EQUAL  &kp LBKT  &kp RBKT    &kp BSLH       &kp TILDE   &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp PIPE               &trans
                              &trans    &trans      &trans         &kp DELETE  &trans    &trans
            >;
        };

        ARRFUN {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &kp TAB       &kp HOME      &kp UP        &kp END       &kp PAGE_UP      &kp PRINTSCREEN  &kp F1  &kp F2   &kp F3   &kp F4   &kp K_POWER
&trans      &kp ESCAPE    &kp LEFT      &kp DOWN      &kp RIGHT     &kp PAGE_DOWN    &kp INSERT       &kp F5  &kp F6   &kp F7   &kp F8   &kp C_SLEEP
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &bt BT_CLR_ALL   &kp F9  &kp F10  &kp F11  &kp F12  &trans
                                        &trans        &trans        &kp BACKSPACE    &trans           &trans  &trans
            >;
        };

        MACRTY {
            bindings = <
&kp TAB     &kp Q                &kp W            &kp E               &kp R                 &kp T              &kp Y         &kp U               &kp I                 &kp O            &kp P                        &kp LA(BACKSPACE)
&kp ESCAPE  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_GUI D     &hml LEFT_SHIFT F     &kp G              &kp H         &hmr LEFT_SHIFT J   &hmr LEFT_GUI K       &hmr LEFT_ALT L  &hmr LEFT_CONTROL SEMICOLON  &kp SQT
&kp CAPS    &kp Z                &kp X            &kp C               &kp V                 &kp B              &kp N         &kp M               &kp COMMA             &kp DOT          &kp FSLH                     &caps_word
                                                  &mt LEFT_GUI MINUS  &mt LEFT_SHIFT SPACE  &lt 4 BACKSPACE    &lt 5 DELETE  &mt LEFT_ALT ENTER  &mt LEFT_CONTROL SQT
            >;
        };

        MACSYM {
            bindings = <
&trans  &kp N1     &kp N2     &kp N3    &kp N4      &kp N5         &kp N6      &kp N7    &kp N8          &kp N9                &kp N0                 &trans
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET   &kp AMPS  &kp ASTRK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&tog 3  &kp GRAVE  &kp EQUAL  &kp LBKT  &kp RBKT    &kp BSLH       &kp TILDE   &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp PIPE               &trans
                              &trans    &trans      &trans         &kp DELETE  &trans    &trans
            >;
        };

        MACFUN {
            bindings = <
&trans      &kp TAB       &kp HOME      &kp UP        &kp END       &kp PAGE_UP      &kp PRINTSCREEN  &kp F1  &kp F2   &kp F3   &kp F4   &kp K_POWER
&trans      &kp ESCAPE    &kp LEFT      &kp DOWN      &kp RIGHT     &kp PAGE_DOWN    &kp INSERT       &kp F5  &kp F6   &kp F7   &kp F8   &kp C_SLEEP
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &bt BT_CLR_ALL   &kp F9  &kp F10  &kp F11  &kp F12  &trans
                                        &trans        &trans        &kp BACKSPACE    &trans           &trans  &trans
            >;
        };

        MOUSEY {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &mkp MB4        &mmv MOVE_UP    &mkp MB5         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans          &trans           &trans  &trans
                        &trans  &trans  &trans    &trans  &mkp MB1        &mkp MB2
            >;
        };
    };
};
